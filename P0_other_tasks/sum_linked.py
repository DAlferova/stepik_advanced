"""
Задача: Реализовать функцию для суммирования 2-ух linked list. Длинна листов может быть различна
Пример: даны L1: [1, 2, 3], L2: [9, 12, 24] и на выходе получается [10,14,27].
(для решения данной задачи нужно реализовать классы, описывающие работу с linked list структурой).

"""

from P0_other_tasks.linked_list import LinkedList
"Импортируем ранее написанный класс"

"Задаём два случайных списка"
L1 = [45, 7, 12, 567, 99]
L2 = [4, 8, 15, 16, 23, 42]

if __name__ == '__main__':
    LL = LinkedList()


def sum_elements_two_linked_lists(L1: list, L2: list) -> list:
    "Создаём функцию для работы с двумя списками"

    if len(L1) < len(L2):
        "Отталкиваемся от того, что список 2 длиннее. К его элементам суммируются элементы списка 1"

        for i in range(len(L1)):
            "Итерируемся по элементам списков. После суммы последнего элемента L1 оставшиеся \
            элементы L2 останутся неизменными. Будет возвращён результат обновлённого L2"
            L2[i] += L1[i]
        return L2

    for i in range(len(L2)):
        L1[i] += L2[i]
    return L1

LL.insert_values(sum_elements_two_linked_lists(L1, L2))
"Преобразовываем ранее введённые списки в linked list"

LL.print()
"Выводим на экран linked list, состоящий из суммы элементов двух начальных списков"

